language: c
sudo: false
addons:
  apt:
    packages:
    - gfortran     #Add Fortran (C and C++ installed by specifying C++ above)
env:
  global:
  - TERM=dumb      #Add for "The log length has exceeded the limit of 4 Megabytes"
before_install:
# ---------------------------------------------------------------------------
# Creating directory for custom installation of libraries used by RegESM
# ---------------------------------------------------------------------------
  - cd $TRAVIS_BUILD_DIR
  - mkdir ../progs
  - cd ../progs
  - export PROGS=$PWD
# ---------------------------------------------------------------------------
# Install Zlib
# ---------------------------------------------------------------------------
  - cd $PROGS
  - wget "http://zlib.net/zlib-1.2.8.tar.gz"
  - tar -zxvf zlib-1.2.8.tar.gz
  - cd zlib-1.2.8
  - ./configure --prefix=$PROGS/zlib-1.2.8
  - make
  - make install
  - export LD_LIBRARY_PATH=$PROGS/zlib-1.2.8/lib:$LD_LIBRARY_PATH
# ---------------------------------------------------------------------------
# Install HDF5
# ---------------------------------------------------------------------------
  - cd $PROGS
  - wget "http://www.hdfgroup.org/ftp/HDF5/current/src/hdf5-1.8.16.tar.gz"
  - tar -zxvf hdf5-1.8.16.tar.gz
  - cd hdf5-1.8.16
  - ./configure --prefix=$PROGS/hdf5-1.8.16 --with-zlib=$PROGS/zlib-1.2.8 --enable-fortran --enable-cxx CC=gcc FC=gfortran CXX=g++
  - make
  - make install
  - export LD_LIBRARY_PATH=$PROGS/hdf5-1.8.16/lib:$LD_LIBRARY_PATH
# ---------------------------------------------------------------------------
# Install NetCDF (C/C++ and Fortran)
# ---------------------------------------------------------------------------
  - cd $PROGS
  - mkdir netcdf-4.4.0
  - cd netcdf-4.4.0
  - wget "ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.4.0.tar.gz"
  - tar -zxvf netcdf-4.4.0.tar.gz
  - mv netcdf-4.4.0 src
  - cd src
  - ./configure --prefix=$PROGS/netcdf-4.4.0 CC=gcc FC=gfortran LDFLAGS="-L$PROGS/zlib-1.2.8/lib -L$PROGS/hdf5-1.8.16/lib" CPPFLAGS="-I$PROGS/zlib-1.2.8/include -I$PROGS/hdf5-1.8.16/include"
  - make
  - make install
  - cd $PROGS
  - mkdir netcdf-cxx-4.2
  - cd netcdf-cxx-4.2
  - wget "ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz"
  - tar -zxvf netcdf-cxx-4.2.tar.gz
  - mv netcdf-cxx-4.2 src
  - cd src
  - ./configure --prefix=$PROGS/netcdf-cxx-4.2 CC=gcc CXX=g++ LDFLAGS="-L$PROGS/zlib-1.2.8/lib -L$PROGS/hdf5-1.8.16/lib -L$PROGS/netcdf-4.4.0/lib" CPPFLAGS="-I$PROGS/zlib-1.2.8/include -I$PROGS/hdf5-1.8.16/include -I$PROGS/netcdf-4.4.0/include"
  - make
  - make install
  - cd $PROGS
  - mkdir netcdf-fortran-4.4.3
  - cd netcdf-fortran-4.4.3
  - wget "ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-fortran-4.4.3.tar.gz"
  - tar -zxvf netcdf-fortran-4.4.3.tar.gz
  - mv netcdf-fortran-4.4.3 src 
  - cd src
  - ./configure --prefix=$PROGS/netcdf-fortran-4.4.3 CC=gcc FC=gfortran LDFLAGS="-L$PROGS/zlib-1.2.8/lib -L$PROGS/hdf5-1.8.16/lib -L$PROGS/netcdf-4.4.0/lib" CPPFLAGS="-I$PROGS/zlib-1.2.8/include -I$PROGS/hdf5-1.8.16/include -I$PROGS/netcdf-4.4.0/include"
  - make
  - make install
  - cd $PROGS/netcdf-4.4.0/lib
  - ln -s ../../netcdf-cxx-4.2/lib/* .
  - rm -rf pkgconfig
  - ln -s ../../netcdf-fortran-4.4.3/lib/* .
  - cd $PROGS/netcdf-4.4.0/include
  - ln -s ../../netcdf-cxx-4.2/include/* .
  - ln -s ../../netcdf-fortran-4.4.3/include/* .
  - export NETCDF=$PROGS/netcdf-4.4.0
  - export LD_LIBRARY_PATH=$NETCDF/lib:$LD_LIBRARY_PATH
  - export PATH=$NETCDF/bin:$PATH
# ---------------------------------------------------------------------------
# Install Xerces C++ library
# ---------------------------------------------------------------------------
  - cd $PROGS
  - wget "http://ftp.itu.edu.tr/Mirror/Apache//xerces/c/3/sources/xerces-c-3.1.3.tar.gz"
  - tar -zxvf xerces-c-3.1.3.tar.gz
  - cd xerces-c-3.1.3
  - ./configure --prefix=$PROGS/xerces-c-3.1.3 CC=gcc CXX=g++
  - make
  - make install
  - export XERCES=$PROGS/xerces-c-3.1.3
  - export LD_LIBRARY_PATH=$XERCES/lib:$LD_LIBRARY_PATH
# ---------------------------------------------------------------------------
# Install OpenMPI
# ---------------------------------------------------------------------------
  - cd $PROGS
  - wget --no-check-certificate "https://www.open-mpi.org/software/ompi/v1.10/downloads/openmpi-1.10.2.tar.gz"
  - tar -zxvf openmpi-1.10.2.tar.gz
  - cd openmpi-1.10.2
  - ./configure --prefix=$PROGS/openmpi-1.10.2 CC=gcc CXX=g++ FC=gfortran
  - make
  - make install
  - export LD_LIBRARY_PATH=$PROGS/openmpi-1.10.2/lib:$LD_LIBRARY_PATH
  - export PATH=$PROGS/openmpi-1.10.2/bin:$PATH
# ---------------------------------------------------------------------------
# Install ESMF
# ---------------------------------------------------------------------------
  - cd $PROGS
  - wget "https://sourceforge.net/projects/esmf/files/ESMF_7_0_0/esmf_7_0_0_src.tar.gz"
  - tar -zxvf esmf_7_0_0_src.tar.gz
  - mv esmf esmf-7.0.0
  - cd esmf-7.0.0  
  - export ESMF_OS=Linux
  - export ESMF_TESTMPMD=OFF
  - export ESMF_TESTHARNESS_ARRAY=RUN_ESMF_TestHarnessArray_default
  - export ESMF_TESTHARNESS_FIELD=RUN_ESMF_TestHarnessField_default
  - export ESMF_DIR=$PROGS/esmf-7.0.0
  - export ESMF_TESTWITHTHREADS=OFF
  - export ESMF_INSTALL_PREFIX=$PROGS/esmf-7.0.0/install_dir
  - export ESMF_COMM=openmpi
  - export ESMF_TESTEXHAUSTIVE=ON
  - export ESMF_BOPT=O
  - export ESMF_OPENMP=OFF
  - export ESMF_SITE=default
  - export ESMF_ABI=64
  - export ESMF_COMPILER=gfortran
  - export ESMF_PIO=internal
  - export ESMF_NETCDF "split"
  - export ESMF_NETCDF_INCLUDE=${NETCDF}/include
  - export ESMF_NETCDF_LIBPATH=${NETCDF}/lib 
  - export ESMF_XERCES "standard"
  - export ESMF_XERCES_INCLUDE=${XERCES}/include
  - export ESMF_XERCES_LIBPATH=${XERCES}/lib
  - export ESMF_LIB="${ESMF_INSTALL_PREFIX}/lib/lib${ESMF_BOPT}/${ESMF_OS}.${ESMF_COMPILER}.${ESMF_ABI}.${ESMF_COMM}.${ESMF_SITE}"
  - export ESMFMKFILE="${ESMF_LIB}/esmf.mk"
  - export PATH="${ESMF_DIR}/apps/apps${ESMF_BOPT}/${ESMF_OS}.${ESMF_COMPILER}.${ESMF_ABI}.${ESMF_COMM}.${ESMF_SITE}:${PATH}"
  - export LD_LIBRARY_PATH=${ESMF_LIB}:${LD_LIBRARY_PATH}
  - export PATH=${ESMF_INSTALL_PREFIX}/bin/bin${ESMF_BOPT}/${ESMF_OS}.${ESMF_COMPILER}.${ESMF_ABI}.${ESMF_COMM}.${ESMF_SITE}:${PATH}
  - make info
  - make
  - make install
script: 
  - echo "Working ..."
